[{"/Users/lizuoxing/yuhan/src/container/Home/index.js":"1","/Users/lizuoxing/yuhan/src/container/Home/utils.js":"2","/Users/lizuoxing/yuhan/src/container/Home/components/MenuItemDetailCard/index.js":"3","/Users/lizuoxing/yuhan/src/container/Home/api.js":"4","/Users/lizuoxing/yuhan/src/container/Home/components/Products/index.js":"5","/Users/lizuoxing/yuhan/src/App.js":"6"},{"size":1891,"mtime":1610809389140,"results":"7","hashOfConfig":"8"},{"size":1083,"mtime":1610796033461,"results":"9","hashOfConfig":"8"},{"size":4801,"mtime":1610808683561,"results":"10","hashOfConfig":"8"},{"size":389,"mtime":1610800124317,"results":"11","hashOfConfig":"8"},{"size":1546,"mtime":1610807402448,"results":"12","hashOfConfig":"8"},{"size":598,"mtime":1610778914838,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1tclhoj",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lizuoxing/yuhan/src/container/Home/index.js",["27"],"/Users/lizuoxing/yuhan/src/container/Home/utils.js",[],"/Users/lizuoxing/yuhan/src/container/Home/components/MenuItemDetailCard/index.js",["28"],"/Users/lizuoxing/yuhan/src/container/Home/api.js",[],"/Users/lizuoxing/yuhan/src/container/Home/components/Products/index.js",["29"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst ProductsWrapper = styled.div`\n  margin-left: 20px;\n`;\n\nconst ProductItem = styled.div`\n  display: flex;\n  margin-top: ${({ index }) => index > 0 ? 10 : 0}px;\n`;\nconst ProductRightSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  margin-left: 10px;\n`;\n\nconst ProductImg = styled.img`\n  display: inline-block;\n  width: 100px;\n  height: 100px;\n  border-radius: 15px;\n  background:#cccccc;\n  border: 1px solid red;\n`;\nconst ProductDiscription = styled.p`\n  margin: 0;\n  max-width: 200px;\n`;\nconst ProductPriceWrapper = styled.div`\n  margin-top: 10px;\n`;\nconst ProductPrice = styled.span`\n  display: inline-block;\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nconst ProductCountTip = styled.span`\n`;\n\n\nconst Index = ({\n  pics = []\n}) => {\n  return (\n    <ProductsWrapper>\n      {\n        pics.map((\n          { \n            id, \n            price, \n            thumbnailUrl, \n            shortDescription\n          }, index) => {\n          return (\n            <ProductItem key={id} index={index}>\n              <ProductImg src={thumbnailUrl} />\n              <ProductRightSection>\n                <ProductDiscription>{shortDescription}</ProductDiscription>\n                <ProductPriceWrapper>\n                  <ProductPrice>${price}</ProductPrice>\n                </ProductPriceWrapper>\n              </ProductRightSection>\n            </ProductItem>\n          )\n        })\n      }\n    </ProductsWrapper>\n  )\n}\n\nexport default Index;","/Users/lizuoxing/yuhan/src/App.js",[],{"ruleId":"30","severity":1,"message":"31","line":41,"column":13,"nodeType":"32","endLine":45,"endColumn":4},{"ruleId":"30","severity":1,"message":"33","line":95,"column":13,"nodeType":"34","endLine":101,"endColumn":10},{"ruleId":"35","severity":1,"message":"36","line":40,"column":7,"nodeType":"37","messageId":"38","endLine":40,"endColumn":22},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-unused-vars","'ProductCountTip' is assigned a value but never used.","Identifier","unusedVar"]